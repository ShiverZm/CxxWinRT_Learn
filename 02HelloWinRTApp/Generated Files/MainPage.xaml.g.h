//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#pragma once


namespace winrt::_02HelloWinRTApp::implementation
{
    using IInspectable = ::winrt::Windows::Foundation::IInspectable;

    template <typename D, typename ... I>
    struct MainPageT : public ::winrt::_02HelloWinRTApp::implementation::MainPage_base<D,
        ::winrt::Windows::UI::Xaml::Markup::IComponentConnector,
        ::winrt::Windows::UI::Xaml::Markup::IComponentConnector2,
        I...>
    {
        using base_type = typename MainPageT::base_type;
        using base_type::base_type;
        using class_type = typename MainPageT::class_type;

        void InitializeComponent();
        void Connect(int32_t connectionId, IInspectable const& target);
        ::winrt::Windows::UI::Xaml::Markup::IComponentConnector GetBindingConnector(int32_t connectionId, IInspectable const& target);
        void UnloadObject(::winrt::Windows::UI::Xaml::DependencyObject const& dependencyObject);
        void DisconnectUnloadedObject(int32_t connectionId);

        ::winrt::Windows::UI::Xaml::Controls::StackPanel contentPanel()
        {
            return _contentPanel;
        }
        void contentPanel(::winrt::Windows::UI::Xaml::Controls::StackPanel value)
        {
            _contentPanel = value;
        }

        ::winrt::Windows::UI::Xaml::Controls::StackPanel inputPanel()
        {
            return _inputPanel;
        }
        void inputPanel(::winrt::Windows::UI::Xaml::Controls::StackPanel value)
        {
            _inputPanel = value;
        }

        ::winrt::Windows::UI::Xaml::Controls::TextBlock greetingOutput()
        {
            return _greetingOutput;
        }
        void greetingOutput(::winrt::Windows::UI::Xaml::Controls::TextBlock value)
        {
            _greetingOutput = value;
        }

        ::winrt::Windows::UI::Xaml::Controls::TextBox nameInput()
        {
            return _nameInput;
        }
        void nameInput(::winrt::Windows::UI::Xaml::Controls::TextBox value)
        {
            _nameInput = value;
        }

        ::winrt::Windows::UI::Xaml::Controls::Button inputButton()
        {
            return _inputButton;
        }
        void inputButton(::winrt::Windows::UI::Xaml::Controls::Button value)
        {
            _inputButton = value;
        }

        ::winrt::Windows::UI::Xaml::VisualState wideState()
        {
            return _wideState;
        }
        void wideState(::winrt::Windows::UI::Xaml::VisualState value)
        {
            _wideState = value;
        }

        ::winrt::Windows::UI::Xaml::VisualState narrowState()
        {
            return _narrowState;
        }
        void narrowState(::winrt::Windows::UI::Xaml::VisualState value)
        {
            _narrowState = value;
        }
        
    protected:
        bool _contentLoaded{false};

    private:
        struct MainPage_obj1_Bindings;

        ::winrt::Windows::UI::Xaml::Controls::StackPanel _contentPanel{nullptr};
        ::winrt::Windows::UI::Xaml::Controls::StackPanel _inputPanel{nullptr};
        ::winrt::Windows::UI::Xaml::Controls::TextBlock _greetingOutput{nullptr};
        ::winrt::Windows::UI::Xaml::Controls::TextBox _nameInput{nullptr};
        ::winrt::Windows::UI::Xaml::Controls::Button _inputButton{nullptr};
        ::winrt::Windows::UI::Xaml::VisualState _wideState{nullptr};
        ::winrt::Windows::UI::Xaml::VisualState _narrowState{nullptr};
    };
}

